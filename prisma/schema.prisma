generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  phoneNumber String
  rollNo      String   @unique
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Profile     Profile?
  Role        Role?
}

model Role {
  id         Int         @id @default(autoincrement())
  roleName   String
  userId     Int         @unique
  user       User        @relation(fields: [userId], references: [id])
  permission Permissions
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

enum Permissions {
  ALL
  CREATE_USER
  DELETE_USER
  UPDATE_USER
  CREATE_JOB
  UPDATE_JOB
  DELETE_JOB
  CREATE_ROLE
  UPDATE_ROLE
  DELETE_ROLE
}

model Profile {
  id          Int         @id @default(autoincrement())
  profileType ProfileType
  user        User        @relation(fields: [userId], references: [id])
  userId      Int         @unique
}

enum ProfileType {
  INDIVIDUAL
  ORGANIZATION
}

model Jobs {
  id              Int          @id @default(autoincrement())
  title           String
  description     String
  image           String
  offeredSalary   Int
  location        Location
  level           Level
  jobType         JobType
  openings        Int
  requirements    String
  responsibilites String
  endDate         DateTime
  Categories      Categories[]
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

enum JobType {
  FULL_TIME
  PART_TIME
  INTERN
  CONTRACT
}

enum Location {
  ONLINE
  ON_SITE
}

enum Level {
  ENTRY
  INTERMEDIATE
  EXPERT
}

model Categories {
  id           Int      @id @default(autoincrement())
  categoryName String
  jobId        Int
  job          Jobs     @relation(fields: [jobId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
